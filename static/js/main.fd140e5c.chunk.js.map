{"version":3,"sources":["Albums.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","albumList","display","listStyle","albumContent","backgroundColor","margin","flexDirection","albumCover","width","height","breakpoints","down","description","justifyContent","alignSelf","gap","albumTitle","fontSize","artistName","releaseDate","color","Albums","props","artist","filterDate","albumsFiltered","albums","filter","album","release_date","classes","length","map","index","className","key","src","images","url","title","name","alt","Link","href","external_urls","spotify","target","rel","underline","Button","cardButton","variant","size","App","today","Date","useState","numFollowed","setNumFollowed","user","setUser","artists","setArtists","filterString","setFilterString","currentFilterDate","getMonth","getFullYear","slice","getDate","setFilterDate","useEffect","fetchData","a","fetch","userResponse","json","userJson","display_name","artistsResponse","artistsJson","artistsToRender","toLowerCase","includes","marginTop","marginBottom","followedArtists","artistFilter","marginRight","dateFilter","grid","gridAutoRows","footer","padding","spacing","borderTop","darkTheme","createMuiTheme","palette","type","overrides","MuiInputLabel","root","MuiInput","borderBottom","typography","h2","up","h3","ThemeProvider","Container","maxWidth","Typography","component","TextField","label","onChange","text","value","utils","DateFnsUtils","disableFuture","placeholder","format","event","values","toLocaleDateString","split","year","day","newFilterDate","handleDateChange","Grid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd140e5c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  albumList: {\r\n    display: 'inline-block',\r\n    listStyle: 'none',\r\n  },\r\n  albumContent: {\r\n    backgroundColor: '#424242',\r\n    margin: '5px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  albumCover: {\r\n    width: '400px',\r\n    height: '400px',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '275px',\r\n      height: '275px',\r\n    },\r\n  },\r\n  description: {\r\n    width: '375px',\r\n    height: '200px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    gap: '1rem',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '250px',\r\n      height: '200px',\r\n    },\r\n  },\r\n  albumTitle: {\r\n    fontSize: '1.25rem',\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '1rem',\r\n    },\r\n  },\r\n  artistName: {\r\n    fontSize: '1.25rem',\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '1rem',\r\n    },\r\n  },\r\n  releaseDate: {\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '0.75rem',\r\n    },\r\n  },\r\n  releaseDate: {\r\n    color: '#e0e0e0',\r\n  },\r\n  cardButton: {\r\n    backgroundColor: '#1DB954',\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(30,215,96,0.8)',\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function Albums(props) {\r\n  let artist = props.artist\r\n  let filterDate = props.filterDate\r\n  let albumsFiltered = artist.albums.filter(\r\n    (album) => album.release_date >= filterDate,\r\n  )\r\n  const classes = useStyles()\r\n  if (albumsFiltered.length === 0) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {albumsFiltered.map((albums, index) => (\r\n        <li className={classes.albumList} key={index}>\r\n          <div className={classes.albumContent}>\r\n            <img\r\n              className={classes.albumCover}\r\n              src={albums.images[0].url}\r\n              title={albums.name}\r\n              alt={albums.name}\r\n            />\r\n            <div className={classes.description}>\r\n              <div className={classes.albumTitle}>{albums.name}</div>\r\n              <div className={classes.artistName}>{artist.name}</div>\r\n              <div className={classes.releaseDate}>\r\n                Release Date: {albums.release_date}\r\n              </div>\r\n              <Link\r\n                href={albums.external_urls.spotify}\r\n                target='_blank'\r\n                rel='noopener'\r\n                underline='none'\r\n              >\r\n                <Button\r\n                  className={classes.cardButton}\r\n                  variant='contained'\r\n                  size='small'\r\n                >\r\n                  Open In Spotify\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\nimport Albums from './Albums'\nimport './App.css'\nimport DateFnsUtils from '@date-io/date-fns/build'\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport {\n  makeStyles,\n  ThemeProvider,\n  createMuiTheme,\n} from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nfunction App() {\n  let today = new Date()\n  const [numFollowed, setNumFollowed] = useState(0)\n  const [user, setUser] = useState({\n    name: '',\n  })\n  const [artists, setArtists] = useState([\n    {\n      name: '',\n      href: '',\n      albums: [],\n    },\n  ])\n  const [filterString, setFilterString] = useState('')\n  let currentFilterDate =\n    today.getMonth() === 0\n      ? today.getFullYear() - 1\n      : today.getFullYear() +\n        '-' +\n        ('0' + (today.getMonth() - 2 === 0 ? 12 : today.getMonth())).slice(-2) +\n        '-' +\n        ('0' + today.getDate()).slice(-2)\n  const [filterDate, setFilterDate] = useState(currentFilterDate)\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  const fetchData = async () => {\n    const userResponse = await fetch(\n      'https://spotipynewreleasesbackend.herokuapp.com/api/get-user',\n    )\n    const userJson = await userResponse.json()\n    // console.log(userJson)\n    setUser({\n      name: userJson.display_name,\n    })\n\n    const artistsResponse = await fetch(\n      'https://spotipynewreleasesbackend.herokuapp.com/api/get-artists',\n    )\n    const artistsJson = await artistsResponse.json()\n    // console.log(artistsJson)\n    setArtists((artists) => [...artists, ...artistsJson.artists])\n    setNumFollowed(numFollowed + artistsJson.artists.length)\n  }\n\n  // array of followed artists\n  let artistsToRender =\n    user && artists // checks if there is a user that follows at least one artist\n      ? artists.filter(\n          (artists) =>\n            artists.name !== '' &&\n            artists.name.toLowerCase().includes(filterString.toLowerCase()),\n        )\n      : []\n\n  const handleDateChange = (event) => {\n    let date = event.toLocaleDateString()\n    let values = date.split('/')\n    let year = values[2]\n    let day = values[1]\n    let month = values[0]\n    let newFilterDate =\n      year + '-' + ('0' + month).slice(-2) + '-' + ('0' + day).slice(-2)\n    setFilterDate(newFilterDate)\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    user: {\n      marginTop: '25px',\n      marginBottom: '10px',\n    },\n    followedArtists: {\n      marginBottom: '10px',\n    },\n    artistFilter: {\n      marginRight: '10px',\n      marginBottom: '10px',\n    },\n    dateFilter: {\n      marginBottom: '50px',\n    },\n    grid: {\n      gridAutoRows: '1fr',\n    },\n    footer: {\n      padding: theme.spacing(5, 2),\n      marginTop: '50px',\n      borderTop: '1px solid rgba(240,240,240,0.2)',\n    },\n  }))\n  const classes = useStyles()\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n    },\n    overrides: {\n      MuiInputLabel: {\n        root: {\n          '&$focused': {\n            color: '#fff',\n          },\n        },\n      },\n      MuiInput: {\n        underline: {\n          '&:after': {\n            borderBottom: '2px solid white',\n          },\n        },\n      },\n    },\n  })\n\n  darkTheme.typography.h2 = {\n    fontSize: '2.4rem',\n    '@media (min-width:600px)': {\n      fontSize: '3.0rem',\n    },\n    [darkTheme.breakpoints.up('md')]: {\n      fontSize: '4rem',\n    },\n  }\n\n  darkTheme.typography.h3 = {\n    fontSize: '1.5rem',\n    '@media (min-width:600px)': {\n      fontSize: '2.5rem',\n    },\n    [darkTheme.breakpoints.up('md')]: {\n      fontSize: '3.0rem',\n    },\n  }\n\n  return (\n    <div className='App'>\n      {numFollowed !== 0 ? (\n        <ThemeProvider theme={darkTheme}>\n          <Container maxWidth='xl'>\n            <Typography variant='h2' component='h1' className={classes.user}>\n              {user.name}'s New Releases\n            </Typography>\n            <Typography\n              variant='h3'\n              component='h3'\n              className={classes.followedArtists}\n            >\n              {numFollowed} followed artists\n            </Typography>\n            <TextField\n              className={classes.artistFilter}\n              label='Filter by Artist Name'\n              onChange={(text) => {\n                setFilterString(text.target.value)\n              }}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                className={classes.dateFilter}\n                disableFuture\n                label='Filter by Release Date'\n                value={filterDate}\n                placeholder={filterDate}\n                format='MM/dd/yyyy'\n                onChange={(event) => handleDateChange(event)}\n              />\n            </MuiPickersUtilsProvider>\n            <Grid className={classes.grid}>\n              {artistsToRender.map((artist) => (\n                <Albums\n                  key={artist.name}\n                  artist={artist}\n                  filterDate={filterDate}\n                />\n              ))}\n            </Grid>\n          </Container>\n          <footer className={classes.footer}>\n            <Typography variant='body2'>\n              {'Copyright © '}\n              {new Date().getFullYear()} Jason O'Dell\n            </Typography>\n          </footer>\n        </ThemeProvider>\n      ) : (\n        <Fragment>Loading...</Fragment>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}